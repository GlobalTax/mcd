import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { AnnualBudgetGrid } from '@/components/budget/AnnualBudgetGrid';
import { useFranchiseeRestaurants } from '@/hooks/useFranchiseeRestaurants';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { Building, Download, FileText } from 'lucide-react';
import { SidebarProvider, SidebarInset, SidebarTrigger } from '@/components/ui/sidebar';
import { AppSidebar } from '@/components/navigation/AppSidebar';
import { BalanceSheetStatement } from '@/components/profitloss/BalanceSheetStatement';
import { CashFlowStatement } from '@/components/profitloss/CashFlowStatement';
export default function AnnualBudgetPage() {
    const { restaurants, loading: restaurantsLoading } = useFranchiseeRestaurants();
    const [selectedRestaurant, setSelectedRestaurant] = useState('');
    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());
    const [activeTab, setActiveTab] = useState('budget');
    const currentYear = new Date().getFullYear();
    const years = Array.from({ length: 5 }, (_, i) => currentYear - 2 + i);
    if (restaurantsLoading) {
        return (_jsx("div", { className: "min-h-screen bg-gray-50 flex items-center justify-center", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4" }), _jsx("p", { className: "text-gray-600", children: "Cargando restaurantes..." })] }) }));
    }
    const selectedRestaurantData = restaurants.find(r => r.id === selectedRestaurant);
    return (_jsx(SidebarProvider, { children: _jsxs("div", { className: "min-h-screen flex w-full bg-gray-50", children: [_jsx(AppSidebar, {}), _jsxs(SidebarInset, { className: "flex-1", children: [_jsxs("header", { className: "flex h-16 shrink-0 items-center gap-2 border-b bg-white px-6", children: [_jsx(SidebarTrigger, { className: "-ml-1" }), _jsxs("div", { className: "flex-1", children: [_jsx("h1", { className: "text-lg font-semibold text-gray-900", children: "Estados Financieros" }), _jsx("p", { className: "text-sm text-gray-500", children: selectedRestaurantData
                                                ? `${selectedRestaurantData.base_restaurant?.restaurant_name} - #${selectedRestaurantData.base_restaurant?.site_number}`
                                                : 'Análisis completo de rentabilidad' })] })] }), _jsxs("main", { className: "flex-1 p-6 space-y-6", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900", children: "Estados Financieros" }), _jsx("p", { className: "text-gray-600", children: "Presupuestos y an\u00E1lisis completo" })] }), _jsxs("div", { className: "flex gap-3", children: [_jsxs(Select, { value: selectedYear.toString(), onValueChange: (value) => setSelectedYear(parseInt(value)), children: [_jsx(SelectTrigger, { className: "w-32", children: _jsx(SelectValue, {}) }), _jsx(SelectContent, { children: years.map((year) => (_jsx(SelectItem, { value: year.toString(), children: year }, year))) })] }), _jsxs(Button, { variant: "outline", className: "flex items-center gap-2", children: [_jsx(FileText, { className: "w-4 h-4" }), "Summary Report"] }), _jsxs(Button, { variant: "outline", className: "flex items-center gap-2", children: [_jsx(Download, { className: "w-4 h-4" }), "Export"] })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Building, { className: "w-5 h-5" }), "Seleccionar Restaurante"] }) }), _jsx(CardContent, { children: _jsxs(Select, { value: selectedRestaurant, onValueChange: setSelectedRestaurant, children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, { placeholder: "Seleccionar restaurante" }) }), _jsx(SelectContent, { children: restaurants.map((restaurant) => (_jsxs(SelectItem, { value: restaurant.id, children: [restaurant.base_restaurant?.restaurant_name || 'Sin nombre', " -", restaurant.base_restaurant?.site_number || 'Sin número'] }, restaurant.id))) })] }) })] }), selectedRestaurant ? (_jsx("div", { className: "bg-white rounded-lg border border-gray-200 shadow-sm", children: _jsxs(Tabs, { value: activeTab, onValueChange: setActiveTab, className: "w-full", children: [_jsx("div", { className: "border-b border-gray-200 px-6 pt-6", children: _jsxs(TabsList, { className: "inline-flex h-auto p-0 space-x-8 bg-transparent", children: [_jsx(TabsTrigger, { value: "budget", className: "bg-transparent border-0 border-b-2 border-transparent data-[state=active]:border-orange-500 data-[state=active]:bg-transparent data-[state=active]:text-gray-900 data-[state=active]:shadow-none rounded-none px-0 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 transition-colors", children: "Profit & Loss" }), _jsx(TabsTrigger, { value: "balance-sheet", className: "bg-transparent border-0 border-b-2 border-transparent data-[state=active]:border-orange-500 data-[state=active]:bg-transparent data-[state=active]:text-gray-900 data-[state=active]:shadow-none rounded-none px-0 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 transition-colors", children: "Balance Sheet" }), _jsx(TabsTrigger, { value: "cash-flow", className: "bg-transparent border-0 border-b-2 border-transparent data-[state=active]:border-orange-500 data-[state=active]:bg-transparent data-[state=active]:text-gray-900 data-[state=active]:shadow-none rounded-none px-0 py-3 text-sm font-medium text-gray-600 hover:text-gray-900 transition-colors", children: "Cash Flow Statement" })] }) }), _jsxs("div", { className: "p-6", children: [_jsx(TabsContent, { value: "budget", className: "space-y-6 m-0", children: _jsx(AnnualBudgetGrid, { restaurantId: selectedRestaurant, year: selectedYear }) }), _jsx(TabsContent, { value: "balance-sheet", className: "space-y-6 m-0", children: _jsx(BalanceSheetStatement, { restaurantId: selectedRestaurant, year: selectedYear }) }), _jsx(TabsContent, { value: "cash-flow", className: "space-y-6 m-0", children: _jsx(CashFlowStatement, { restaurantId: selectedRestaurant, year: selectedYear }) })] })] }) })) : (_jsx(Card, { children: _jsxs(CardContent, { className: "p-8 text-center", children: [_jsx(Building, { className: "w-16 h-16 text-gray-400 mx-auto mb-4" }), _jsx("h3", { className: "text-lg font-medium text-gray-900 mb-2", children: "Selecciona un Restaurante" }), _jsx("p", { className: "text-gray-500", children: "Elige un restaurante de la lista para comenzar a trabajar con sus estados financieros." })] }) }))] })] })] }) }));
}
