import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Plus, Building, Mail, Phone } from 'lucide-react';
export function FranchiseeSelector({ franchisees, selectedFranchisee, onSelectFranchisee, onAddFranchisee }) {
    const [showAddForm, setShowAddForm] = useState(false);
    const [newFranchisee, setNewFranchisee] = useState({
        name: '',
        email: '',
        phone: ''
    });
    const handleSubmit = (e) => {
        e.preventDefault();
        if (newFranchisee.name && newFranchisee.email) {
            onAddFranchisee(newFranchisee);
            setNewFranchisee({ name: '', email: '', phone: '' });
            setShowAddForm(false);
        }
    };
    return (_jsxs("div", { className: "p-8", children: [_jsxs("div", { className: "flex justify-between items-center mb-8", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold text-gray-900 mb-2", children: "Franquiciados" }), _jsx("p", { className: "text-gray-600", children: "Gestiona los franquiciados de McDonald's" })] }), _jsxs(Button, { onClick: () => setShowAddForm(!showAddForm), className: "bg-red-600 hover:bg-red-700 text-white font-medium px-6", children: [_jsx(Plus, { className: "w-4 h-4 mr-2" }), "Nuevo Franquiciado"] })] }), showAddForm && (_jsxs("div", { className: "mb-8 p-6 bg-gray-50 rounded-xl border border-gray-200", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Agregar Nuevo Franquiciado" }), _jsxs("form", { onSubmit: handleSubmit, className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "name", className: "text-gray-700 font-medium", children: "Nombre *" }), _jsx(Input, { id: "name", value: newFranchisee.name, onChange: (e) => setNewFranchisee(prev => ({ ...prev, name: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "email", className: "text-gray-700 font-medium", children: "Email *" }), _jsx(Input, { id: "email", type: "email", value: newFranchisee.email, onChange: (e) => setNewFranchisee(prev => ({ ...prev, email: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "phone", className: "text-gray-700 font-medium", children: "Tel\u00E9fono" }), _jsx(Input, { id: "phone", value: newFranchisee.phone, onChange: (e) => setNewFranchisee(prev => ({ ...prev, phone: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500" })] }), _jsxs("div", { className: "flex gap-3 pt-2", children: [_jsx(Button, { type: "submit", className: "bg-red-600 hover:bg-red-700 text-white", children: "Guardar" }), _jsx(Button, { type: "button", variant: "outline", onClick: () => setShowAddForm(false), children: "Cancelar" })] })] })] })), _jsx("div", { className: "grid gap-6 md:grid-cols-2 lg:grid-cols-3", children: franchisees.map((franchisee) => (_jsx("div", { className: `bg-white border border-gray-200 rounded-xl p-6 cursor-pointer transition-all hover:shadow-lg hover:border-red-200 ${selectedFranchisee?.id === franchisee.id ? 'ring-2 ring-red-500 border-red-500' : ''}`, onClick: () => onSelectFranchisee(franchisee), children: _jsxs("div", { className: "flex items-start gap-4", children: [_jsx("div", { className: "w-12 h-12 bg-red-100 rounded-xl flex items-center justify-center flex-shrink-0", children: _jsx(Building, { className: "w-6 h-6 text-red-600" }) }), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsx("h3", { className: "font-semibold text-lg text-gray-900 mb-1", children: franchisee.name }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center gap-2 text-sm text-gray-600", children: [_jsx(Mail, { className: "w-4 h-4" }), _jsx("span", { className: "truncate", children: franchisee.email })] }), franchisee.phone && (_jsxs("div", { className: "flex items-center gap-2 text-sm text-gray-600", children: [_jsx(Phone, { className: "w-4 h-4" }), _jsx("span", { children: franchisee.phone })] })), _jsxs("div", { className: "mt-3 px-3 py-1 bg-yellow-100 text-yellow-800 text-sm font-medium rounded-full inline-block", children: [franchisee.restaurants.length, " restaurantes"] })] })] })] }) }, franchisee.id))) }), franchisees.length === 0 && !showAddForm && (_jsxs("div", { className: "text-center py-16", children: [_jsx("div", { className: "w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4", children: _jsx(Building, { className: "w-10 h-10 text-gray-400" }) }), _jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-2", children: "No hay franquiciados" }), _jsx("p", { className: "text-gray-600 mb-6", children: "Comienza agregando tu primer franquiciado" }), _jsxs(Button, { onClick: () => setShowAddForm(true), className: "bg-red-600 hover:bg-red-700 text-white font-medium px-6", children: [_jsx(Plus, { className: "w-4 h-4 mr-2" }), "Agregar Franquiciado"] })] }))] }));
}
