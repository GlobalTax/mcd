import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Plus, MapPin, Calendar, TrendingUp, Hash, Euro, Building2 } from 'lucide-react';
// Helper function to safely format numbers
const formatNumber = (value) => {
    if (value === undefined || value === null || isNaN(value)) {
        return '0';
    }
    return value.toLocaleString('es-ES');
};
export function RestaurantManager({ franchisee, onAddRestaurant, onSelectRestaurant, selectedRestaurant }) {
    const [showAddForm, setShowAddForm] = useState(false);
    const [newRestaurant, setNewRestaurant] = useState({
        name: '',
        location: '',
        contractEndDate: '',
        siteNumber: '',
        lastYearRevenue: 0,
        baseRent: 0,
        rentIndex: 0,
        franchiseEndDate: '',
        leaseEndDate: '',
        isOwnedByMcD: false
    });
    const handleSubmit = (e) => {
        e.preventDefault();
        if (newRestaurant.name && newRestaurant.location && newRestaurant.contractEndDate && newRestaurant.siteNumber && newRestaurant.franchiseEndDate) {
            onAddRestaurant({
                ...newRestaurant,
                franchiseeId: franchisee.id,
                leaseEndDate: newRestaurant.isOwnedByMcD ? undefined : newRestaurant.leaseEndDate
            });
            setNewRestaurant({
                name: '',
                location: '',
                contractEndDate: '',
                siteNumber: '',
                lastYearRevenue: 0,
                baseRent: 0,
                rentIndex: 0,
                franchiseEndDate: '',
                leaseEndDate: '',
                isOwnedByMcD: false
            });
            setShowAddForm(false);
        }
    };
    return (_jsxs("div", { className: "p-8", children: [_jsxs("div", { className: "flex justify-between items-center mb-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-gray-900 mb-2", children: ["Restaurantes de ", franchisee.name] }), _jsxs("p", { className: "text-gray-600", children: [franchisee.restaurants.length, " restaurantes registrados"] })] }), _jsxs(Button, { onClick: () => setShowAddForm(!showAddForm), className: "bg-red-600 hover:bg-red-700 text-white font-medium px-6", children: [_jsx(Plus, { className: "w-4 h-4 mr-2" }), "Nuevo Restaurante"] })] }), showAddForm && (_jsxs("div", { className: "mb-8 p-6 bg-gray-50 rounded-xl border border-gray-200", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Agregar Nuevo Restaurante" }), _jsxs("form", { onSubmit: handleSubmit, className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "siteNumber", className: "text-gray-700 font-medium", children: "N\u00FAmero de Site *" }), _jsx(Input, { id: "siteNumber", value: newRestaurant.siteNumber, onChange: (e) => setNewRestaurant(prev => ({ ...prev, siteNumber: e.target.value })), placeholder: "ej. MCB001", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "restaurantName", className: "text-gray-700 font-medium", children: "Nombre del Restaurante *" }), _jsx(Input, { id: "restaurantName", value: newRestaurant.name, onChange: (e) => setNewRestaurant(prev => ({ ...prev, name: e.target.value })), placeholder: "ej. McDonald's Parc Central", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "location", className: "text-gray-700 font-medium", children: "Ubicaci\u00F3n *" }), _jsx(Input, { id: "location", value: newRestaurant.location, onChange: (e) => setNewRestaurant(prev => ({ ...prev, location: e.target.value })), placeholder: "ej. Barcelona, Espa\u00F1a", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "contractEnd", className: "text-gray-700 font-medium", children: "Fecha Fin de Contrato *" }), _jsx(Input, { id: "contractEnd", type: "date", value: newRestaurant.contractEndDate, onChange: (e) => setNewRestaurant(prev => ({ ...prev, contractEndDate: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "franchiseEnd", className: "text-gray-700 font-medium", children: "Fecha Fin de Franquicia *" }), _jsx(Input, { id: "franchiseEnd", type: "date", value: newRestaurant.franchiseEndDate, onChange: (e) => setNewRestaurant(prev => ({ ...prev, franchiseEndDate: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500", required: true })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "lastYearRevenue", className: "text-gray-700 font-medium", children: "Facturaci\u00F3n \u00DAltimo A\u00F1o (\u20AC)" }), _jsx(Input, { id: "lastYearRevenue", type: "number", value: newRestaurant.lastYearRevenue, onChange: (e) => setNewRestaurant(prev => ({ ...prev, lastYearRevenue: Number(e.target.value) })), placeholder: "2454919", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "baseRent", className: "text-gray-700 font-medium", children: "Renta Base (\u20AC)" }), _jsx(Input, { id: "baseRent", type: "number", value: newRestaurant.baseRent, onChange: (e) => setNewRestaurant(prev => ({ ...prev, baseRent: Number(e.target.value) })), placeholder: "281579", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "rentIndex", className: "text-gray-700 font-medium", children: "Rent Index (\u20AC)" }), _jsx(Input, { id: "rentIndex", type: "number", value: newRestaurant.rentIndex, onChange: (e) => setNewRestaurant(prev => ({ ...prev, rentIndex: Number(e.target.value) })), placeholder: "75925", className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Checkbox, { id: "isOwnedByMcD", checked: newRestaurant.isOwnedByMcD, onCheckedChange: (checked) => setNewRestaurant(prev => ({
                                                    ...prev,
                                                    isOwnedByMcD: checked,
                                                    leaseEndDate: checked ? '' : prev.leaseEndDate
                                                })) }), _jsx(Label, { htmlFor: "isOwnedByMcD", className: "text-gray-700 font-medium", children: "Propiedad de McDonald's (sin fecha de alquiler)" })] }), !newRestaurant.isOwnedByMcD && (_jsxs("div", { children: [_jsx(Label, { htmlFor: "leaseEnd", className: "text-gray-700 font-medium", children: "Fecha Fin de Alquiler" }), _jsx(Input, { id: "leaseEnd", type: "date", value: newRestaurant.leaseEndDate, onChange: (e) => setNewRestaurant(prev => ({ ...prev, leaseEndDate: e.target.value })), className: "mt-1 border-gray-300 focus:border-red-500 focus:ring-red-500" })] }))] }), _jsxs("div", { className: "flex gap-3 pt-2", children: [_jsx(Button, { type: "submit", className: "bg-red-600 hover:bg-red-700 text-white", children: "Guardar" }), _jsx(Button, { type: "button", variant: "outline", onClick: () => setShowAddForm(false), children: "Cancelar" })] })] })] })), _jsx("div", { className: "grid gap-6 md:grid-cols-2", children: franchisee.restaurants.map((restaurant) => (_jsx("div", { className: `bg-white border border-gray-200 rounded-xl p-6 cursor-pointer transition-all hover:shadow-lg hover:border-red-200 ${selectedRestaurant?.id === restaurant.id ? 'ring-2 ring-red-500 border-red-500' : ''}`, onClick: () => onSelectRestaurant(restaurant), children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-xl text-gray-900", children: restaurant.name }), _jsxs("div", { className: "flex items-center gap-2 mt-1 text-sm text-gray-500", children: [_jsx(Hash, { className: "w-4 h-4" }), _jsxs("span", { children: ["Site: ", restaurant.siteNumber] })] })] }), _jsx("div", { className: "w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center", children: _jsx("span", { className: "text-yellow-600 font-bold text-lg", children: "M" }) })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center gap-3 text-gray-600", children: [_jsx(MapPin, { className: "w-5 h-5" }), _jsx("span", { className: "font-medium", children: restaurant.location })] }), _jsxs("div", { className: "grid grid-cols-2 gap-3 text-sm", children: [_jsxs("div", { className: "flex items-center gap-2 text-gray-600", children: [_jsx(Euro, { className: "w-4 h-4 text-green-600" }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Facturaci\u00F3n" }), _jsxs("p", { className: "font-medium", children: ["\u20AC", formatNumber(restaurant.lastYearRevenue)] })] })] }), _jsxs("div", { className: "flex items-center gap-2 text-gray-600", children: [_jsx(Building2, { className: "w-4 h-4 text-blue-600" }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Renta Base" }), _jsxs("p", { className: "font-medium", children: ["\u20AC", formatNumber(restaurant.baseRent)] })] })] })] }), _jsxs("div", { className: "flex items-center gap-3 text-gray-600", children: [_jsx(Calendar, { className: "w-5 h-5" }), _jsxs("span", { children: ["Contrato hasta: ", _jsx("span", { className: "font-medium", children: new Date(restaurant.contractEndDate).toLocaleDateString('es-ES') })] })] }), _jsxs("div", { className: "flex items-center gap-3 text-gray-600", children: [_jsx(Calendar, { className: "w-5 h-5" }), _jsxs("span", { children: ["Franquicia hasta: ", _jsx("span", { className: "font-medium", children: restaurant.franchiseEndDate ? new Date(restaurant.franchiseEndDate).toLocaleDateString('es-ES') : 'N/A' })] })] }), restaurant.isOwnedByMcD ? (_jsx("div", { className: "bg-yellow-50 border border-yellow-200 rounded-lg p-2", children: _jsx("span", { className: "text-yellow-800 text-sm font-medium", children: "Propiedad de McDonald's" }) })) : restaurant.leaseEndDate && (_jsxs("div", { className: "flex items-center gap-3 text-gray-600", children: [_jsx(Calendar, { className: "w-5 h-5" }), _jsxs("span", { children: ["Alquiler hasta: ", _jsx("span", { className: "font-medium", children: new Date(restaurant.leaseEndDate).toLocaleDateString('es-ES') })] })] }))] }), restaurant.currentValuation && (_jsxs("div", { className: "bg-green-50 border border-green-200 rounded-lg p-4", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(TrendingUp, { className: "w-5 h-5 text-green-600" }), _jsx("span", { className: "font-semibold text-green-800", children: "Valoraci\u00F3n Actual" })] }), _jsxs("p", { className: "text-2xl font-bold text-green-800", children: ["\u20AC", formatNumber(restaurant.currentValuation.finalValuation)] }), _jsxs("p", { className: "text-sm text-green-600 mt-1", children: ["Actualizada: ", new Date(restaurant.currentValuation.valuationDate).toLocaleDateString('es-ES')] })] })), _jsx("div", { className: "pt-2 border-t border-gray-100", children: _jsxs("p", { className: "text-sm text-gray-500", children: [restaurant.valuationHistory.length, " valoraciones realizadas"] }) })] }) }, restaurant.id))) }), franchisee.restaurants.length === 0 && !showAddForm && (_jsxs("div", { className: "text-center py-16", children: [_jsx("div", { className: "w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4", children: _jsx(MapPin, { className: "w-10 h-10 text-gray-400" }) }), _jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-2", children: "No hay restaurantes" }), _jsxs("p", { className: "text-gray-600 mb-6", children: ["Agrega el primer restaurante para ", franchisee.name] }), _jsxs(Button, { onClick: () => setShowAddForm(true), className: "bg-red-600 hover:bg-red-700 text-white font-medium px-6", children: [_jsx(Plus, { className: "w-4 h-4 mr-2" }), "Agregar Restaurante"] })] }))] }));
}
